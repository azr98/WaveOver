name: Build and Deploy Backend

on:
  push:
    paths:
      - 'server/**'
      - '.github/workflows/deploy-back.yml'
    branches:
      - dns-backend-calls

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: WaveOver-Development
    env:
      AWS_DEFAULT_REGION: eu-west-1
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug OIDC Token
        run: |
          echo "Fetching OIDC Token..."
          TOKEN=$(curl -sSL -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" $ACTIONS_ID_TOKEN_REQUEST_URL | jq -r '.value')
          echo "OIDC Token (encoded): $TOKEN"
          echo "OIDC Token (decoded):"
          echo "$TOKEN" | base64 -d | jq '.'
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058264329805:role/GitHubActionsRole-Dev
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          IMAGE_TAG=$(echo $GITHUB_REF_NAME | tr / -)-$(date +%Y%m%d%H%M%S)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
          docker build -f server/WaveOverBackDocker -t 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:$IMAGE_TAG server/
          docker tag 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:$IMAGE_TAG 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:latest
      

      - name: Push Docker image to ECR
        run: |
          docker push 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:$IMAGE_TAG
          docker push 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:latest
      
      - name: Start EC2 Instance
        run: |
          echo "DEV_BACKEND_INSTANCE_ID: ${{ secrets.DEV_BACKEND_INSTANCE_ID }}"
          aws ec2 start-instances --instance-ids ${{ secrets.DEV_BACKEND_INSTANCE_ID }} --region ${{ env.AWS_DEFAULT_REGION }}
          aws ec2 wait instance-running --instance-ids ${{ secrets.DEV_BACKEND_INSTANCE_ID }} --region ${{ env.AWS_DEFAULT_REGION }}
      
      - name: Clean up Docker on EC2
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.DEV_BACKEND_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --comment "Clean up backend by removing old Docker containers" \
            --parameters commands='[
              "REPOSITORY=\"waveover-development-backend\"",
              "AWS_REGION=\"eu-west-1\"",
              "REGISTRY=\"058264329805.dkr.ecr.$AWS_REGION.amazonaws.com\"",
      
              "echo \"Stopping and removing the old container (if exists)...\"",
              "docker stop waveover-container || true",
              "docker rm waveover-container || true",
      
              "echo \"Fetching latest image ID from ECR...\"",
              "LATEST_IMAGE_ID=$(docker images --format \"{{.ID}}\" $REGISTRY/$REPOSITORY:latest)",
      
              "echo \"Finding all old images except the latest...\"",
              "docker images $REGISTRY/$REPOSITORY --format \"{{.ID}} {{.Repository}}:{{.Tag}}\" | grep -v $LATEST_IMAGE_ID | awk \'{print $1}\' | xargs -r docker rmi -f",
      
              "echo \"Pruning unused resources...\"",
              "docker system prune -f"
            ]' \
            --region ${{ env.AWS_DEFAULT_REGION }}
        
  
      - name: Deploy via SSM
        run: |
          aws ssm send-command \
            --instance-ids ${{ secrets.DEV_BACKEND_INSTANCE_ID }} \
            --document-name "AWS-RunShellScript" \
            --comment "Deploy Docker container for backend" \
            --parameters commands='[
              "aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin 058264329805.dkr.ecr.eu-west-1.amazonaws.com",
              "docker pull 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:latest",
              "docker stop waveover-backend-container || true",
              "docker rm waveover-backend-container || true",
              "docker run -d --name waveover-backend-container -p 5000:5000 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend:latest"
            ]' \
            --region ${{ env.AWS_DEFAULT_REGION }}
  
      - name: Output Docker Image Details
        run: |
          echo "Docker image built and used:"
          echo "Repository: 058264329805.dkr.ecr.eu-west-1.amazonaws.com/waveover-development-backend"
          echo "Tag: $IMAGE_TAG"
          echo "Latest Tag: latest"

