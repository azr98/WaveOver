name: Build and Deploy to EC2

on:
  push:
    paths:
      - 'client/**'
      - '.github/workflows/deploy-front.yml'
    branches:
      - master  # Trigger the workflow when commits are pushed to master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: WaveOver-Development
    env:
      AWS_DEFAULT_REGION: eu-west-1
    permissions:
      id-token: write
      contents: read

    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug OIDC Token
        run: |
          echo "Fetching OIDC Token..."
          TOKEN=$(curl -sSL -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" $ACTIONS_ID_TOKEN_REQUEST_URL | jq -r '.value')
          echo "OIDC Token (encoded): $TOKEN"
          echo "OIDC Token (decoded):"
          echo "$TOKEN" | base64 -d | jq '.'
      
      # Step 4: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::058264329805:role/GitHubActionsRole-Dev
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Step 5: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: waveover-development
        run: |
          IMAGE_TAG=$(echo $GITHUB_REF_NAME | tr / -)-$(date +%Y%m%d%H%M%S)
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV
      
          echo "Building Docker Image..."
          docker build -f client/WaveOverFrontDocker -t $REGISTRY/$REPOSITORY:$IMAGE_TAG client/
      
          echo "Tagging Image as latest..."
          docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest
      
          echo "Pushing Image to ECR..."
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:latest
      

      # Step 8: Start EC2 Instance
      - name: Start EC2 Instance
        run: |
          echo "DEV_FRONTEND_INSTANCE_ID: ${{ secrets.DEV_FRONTEND_INSTANCE_ID }}"
          aws ec2 start-instances --instance-ids ${{ secrets.DEV_FRONTEND_INSTANCE_ID}} --region ${{ env.AWS_DEFAULT_REGION }}
          aws ec2 wait instance-running --instance-ids ${{ secrets.DEV_FRONTEND_INSTANCE_ID}} --region ${{ env.AWS_DEFAULT_REGION }}

      # **NEW Step: Stop and clean up the running container and old image**
      - name: Clean up Docker on EC2
        env:
          REPOSITORY: waveover-development
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEV_FRONTEND_SERVER_IP }}
          username: ec2-user
          key: ${{ secrets.WAVEOVER_DEV_PEM_KEY }}
          port: 22
          script: |
            REPOSITORY="waveover-development"
            AWS_REGION="eu-west-1"
            REGISTRY="058264329805.dkr.ecr.$AWS_REGION.amazonaws.com"

            echo "Stopping and removing the old container (if exists)..."
            docker stop waveover-container || true
            docker rm waveover-container || true

            echo "Fetching latest image ID from ECR..."
            LATEST_IMAGE_ID=$(docker images --format "{{.ID}}" $REGISTRY/$REPOSITORY:latest)

            echo "Finding all old images except the latest..."
            docker images $REGISTRY/$REPOSITORY --format "{{.ID}} {{.Repository}}:{{.Tag}}" | grep -v $LATEST_IMAGE_ID | awk '{print $1}' | xargs -r docker rmi -f

            echo "Pruning unused resources..."
            docker system prune -f

      # Step 9: Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.DEV_FRONTEND_SERVER_IP }}
          username: ec2-user
          key: ${{ secrets.WAVEOVER_DEV_PEM_KEY }}
          port: 22
          script: |
              REPOSITORY="waveover-development"  # Define repository variable inside SSH session
              AWS_REGION="eu-west-1"
              REGISTRY="058264329805.dkr.ecr.$AWS_REGION.amazonaws.com"

              echo "Logging in to Amazon ECR..."
              aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REGISTRY

              echo "Pulling latest image..."
              docker pull $REGISTRY/$REPOSITORY:latest

              echo "Running container..."
              docker run -d --name waveover-container -p 80:80 $REGISTRY/$REPOSITORY:latest

      # Step 10: Output Docker Image Details
      - name: Output Docker Image Details
        env:
              REPOSITORY: waveover-development
        run: |
          echo "Docker image built and used:"
          echo "Repository: 058264329805.dkr.ecr.eu-west-1.amazonaws.com/$REPOSITORY"
          echo "Tag: $IMAGE_TAG"
          echo "Latest Tag: latest"







